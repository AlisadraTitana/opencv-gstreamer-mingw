name: Build OpenCV with GStreamer (Python 3.9.2, MSVC)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v4
      with:
        repository: opencv/opencv
        path: opencv

    - name: Checkout OpenCV Contrib
      uses: actions/checkout@v4
      with:
        repository: opencv/opencv_contrib
        path: opencv_contrib

    - name: Install dependencies
      run: |
        choco install -y python --version=3.9.2
        choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install -y ninja git gstreamer gstreamer-devel visualstudio2022buildtools

    - name: Fix GStreamer path
      run: |
        if (Test-Path "C:\gstreamer\1.0\x86_64") {
          Rename-Item "C:\gstreamer\1.0\x86_64" "C:\gstreamer\1.0\msvc_x86_64"
        }

    - name: Verify Python
      run: |
        where python
        python --version
        python -m pip install numpy

    - name: Configure OpenCV with GStreamer + Python
      run: |
        $PY_PATH = (Get-Command python).Source
        $PY_DIR  = Split-Path $PY_PATH
        $PY_INC  = "$PY_DIR\include"
        $PY_LIB  = "$PY_DIR\libs\python39.lib"

        mkdir build
        cd build

        cmake -G "Visual Studio 17 2022" -A x64 `
          -D CMAKE_BUILD_TYPE=Release `
          -D BUILD_opencv_world=ON `
          -D BUILD_opencv_python3=ON `
          -D BUILD_EXAMPLES=OFF `
          -D BUILD_TESTS=OFF `
          -D BUILD_PERF_TESTS=OFF `
          -D WITH_GSTREAMER=ON `
          -D OPENCV_GENERATE_PKGCONFIG=ON `
          -D OPENCV_EXTRA_MODULES_PATH="../opencv_contrib/modules" `
          -D PYTHON_EXECUTABLE="$PY_PATH" `
          -D PYTHON_INCLUDE_DIR="$PY_INC" `
          -D PYTHON_LIBRARY="$PY_LIB" `
          -D CMAKE_INSTALL_PREFIX=install `
          -D GSTREAMER_DIR="C:/gstreamer/1.0/msvc_x86_64/lib/cmake" `
          ../opencv

    - name: Build OpenCV
      run: |
        cd build
        cmake --build . --config Release --target INSTALL

    - name: Check for cv2.pyd and build logs
      shell: pwsh
      run: |
        Write-Host "ðŸ”Ž Searching for cv2.pyd in build/install..."
        $files = Get-ChildItem -Path "build/install" -Recurse -Filter "cv2*.pyd" -ErrorAction SilentlyContinue
    
        if ($files.Count -gt 0) {
            Write-Host "Found cv2.pyd:"
            $files | ForEach-Object { Write-Host $_.FullName }
        } else {
            Write-Warning "cv2.pyd not found in build/install!"
            Write-Host "Listing all files under build/install:"
            Get-ChildItem -Path "build/install" -Recurse | ForEach-Object { Write-Host $_.FullName }
    
            Write-Host "Saving full build log to build_log.txt..."
            Get-ChildItem -Path "build" -Recurse | Out-File -FilePath build_log.txt
        }


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: opencv-gstreamer-python39
        path: |
          build/install/**/*.pyd
          build/install/**/*.dll
          build/install/**/*.lib
