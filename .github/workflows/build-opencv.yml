name: Build OpenCV with GStreamer (MinGW)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install ninja -y
          choco install git -y
          choco install mingw -y
          echo "CMAKE and MinGW installed"

      - name: Clone OpenCV sources
        shell: bash
        run: |
          git clone --branch 4.x https://github.com/opencv/opencv.git
          git clone --branch 4.x https://github.com/opencv/opencv_contrib.git

      - name: Configure OpenCV with CMake
        shell: bash
        run: |
          cmake -G "MinGW Makefiles" -B build -S opencv \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install \
            -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules \
            -DWITH_GSTREAMER=ON \
            -DWITH_FFMPEG=ON \
            -DWITH_OPENCL=OFF \
            -DWITH_CUDA=OFF \
            -DBUILD_opencv_world=ON \
            -DBUILD_TESTS=OFF \
            -DBUILD_PERF_TESTS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DOPENCV_GENERATE_PKGCONFIG=OFF

      - name: Build OpenCV
        shell: bash
        run: |
          cmake --build build --config Release -- -j4

      - name: Install OpenCV
        shell: bash
        run: |
          cmake --install build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-windows-gstreamer
          path: install
